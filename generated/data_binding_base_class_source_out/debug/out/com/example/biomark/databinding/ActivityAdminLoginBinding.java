// Generated by view binder compiler. Do not edit!
package com.example.biomark.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.biomark.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText adminId;

  @NonNull
  public final Button adminLoginButton;

  @NonNull
  public final TextView adminLoginTitle;

  @NonNull
  public final EditText adminPassword;

  @NonNull
  public final TextView tvLogs;

  private ActivityAdminLoginBinding(@NonNull ConstraintLayout rootView, @NonNull EditText adminId,
      @NonNull Button adminLoginButton, @NonNull TextView adminLoginTitle,
      @NonNull EditText adminPassword, @NonNull TextView tvLogs) {
    this.rootView = rootView;
    this.adminId = adminId;
    this.adminLoginButton = adminLoginButton;
    this.adminLoginTitle = adminLoginTitle;
    this.adminPassword = adminPassword;
    this.tvLogs = tvLogs;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admin_id;
      EditText adminId = ViewBindings.findChildViewById(rootView, id);
      if (adminId == null) {
        break missingId;
      }

      id = R.id.admin_login_button;
      Button adminLoginButton = ViewBindings.findChildViewById(rootView, id);
      if (adminLoginButton == null) {
        break missingId;
      }

      id = R.id.admin_login_title;
      TextView adminLoginTitle = ViewBindings.findChildViewById(rootView, id);
      if (adminLoginTitle == null) {
        break missingId;
      }

      id = R.id.admin_password;
      EditText adminPassword = ViewBindings.findChildViewById(rootView, id);
      if (adminPassword == null) {
        break missingId;
      }

      id = R.id.tvLogs;
      TextView tvLogs = ViewBindings.findChildViewById(rootView, id);
      if (tvLogs == null) {
        break missingId;
      }

      return new ActivityAdminLoginBinding((ConstraintLayout) rootView, adminId, adminLoginButton,
          adminLoginTitle, adminPassword, tvLogs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
